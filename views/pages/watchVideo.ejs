<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>

    <link href="../../static/css/webclip.css" rel = "stylesheet" type="text/css" />
    <link rel=stylesheet href="../../static/css/fontawesome.css"></link>
    <link rel=stylesheet href="../../static/css/style.css"></link>
    <script src="https://www.youtube.com/iframe_api"></script>

</head>
<body class="container">

<header>
    <% include ../partials/header %>
</header>

<main>
  <div id="contentWrapper" class="content-wrapper">
    <div id="videoWrapper" class="video-wrapper">
      <div id="videoPlaceholder">

      </div>
    </div>

    <div id="scriptWrapper" class="script-wrapper">
      <div id="scriptPlaceholder" class="script-place-holder">
      </div>
    </div>
    <div id="noteWrapper" class="note-wrapper">
      <div id="notePlaceholder" class="note-place-holder">
        <form autocomplete="off" accept-charset="UTF-8" onsubmit=""  action="/profile/watchVideo/note" method="post" id="noteForm" class="note-form">

          <div id='noteContent'></div>
          <div id='noteControls'>
            <!-- <button id="newWordButton" class="new-word-button">new word</button>
            <button id="newExpressionButton" class="new-expression-button">new expression</button> -->
            <input id="submitButton" type="submit" onclick="myFunction()" class="submit" value="Submit" />
            <input type="hidden" id="vidIdfromQuery" value= <%=vidId%> name = "vidId"/>
          </div>
  </form>
  <br/>

      </div>
    </div>
  </div id="contentWrapper">
</main>

<footer>
    <% include ../partials/footer %>
</footer>

<script src="../../static/js/jquery-3.1.1.js"></script>
<script src="../../static/js/notepad_functions.js"></script>
<script src="../../static/js/webclip.common.js"></script>
<script>
  var player;
  function onYouTubeIframeAPIReady() {
      player = new YT.Player('videoPlaceholder', {
          width: 700,
          height: 400,
          videoId: '<%= vidId %>',
          playerVars: {
              autoplay: 0,
              color: 'white',
              controls:0,
              rel:0,
              iv_load_policy: 3,


          },
          events: {
              onReady: makeScript,
              // onStateChange:
          }
      });
  }

//bring in script's json file into the ejs
  var loadedScript = <%- JSON.stringify(script) %>
  var scriptFile = [loadedScript[0].script] //fix this[0]
  var scriptFileArray = [...scriptFile[0]]

function makeScript(){
  for(i=0; i<scriptFileArray.length; i++){
    $("#scriptPlaceholder").append("<div id=scriptSent"+i+" class=script-sent time="+scriptFileArray[i].startTime+"> </div> <br />")
    $("#scriptSent"+i).text(scriptFileArray[i].content)
   }
}


//function to skip to line's time
  $(".script-sent").on("click",function(){
    player.seekTo($(this).attr('time'))
$("#submitButton").on("click", function(){
  console.log(wordLearn)
  console.log(wordCommentLearn)
})


  })
</script>

<script>
var keyData = {};
var learnData = {};
var wantData = {};

const pointKey = {
  name: 'highlight',
  description: 'Highlight content',
  action: function(value, range) {

    const $highlight = document.createElement('span')
    $highlight.style.backgroundColor = 'rgba(92,255,160,.7)'
    // or just add a class
    // $highlight.classList.add('your-class')
    range.surroundContents($highlight)
    keyData = value
    console.log('this is key: ' + keyData)

  }
}

const pointLearn = {
  name: 'pointLearn',
  description: 'Highlight and save to learn',
  icon: 'question-circle',
  action: function(value, range) {

    const $highlight = document.createElement('span')
    $highlight.style.backgroundColor = 'rgba(255, 245, 157,.9)'
    // or just add a class
    // $highlight.classList.add('your-class')
    range.surroundContents($highlight)
    //append input element into note contentWrapper
      $("#noteContent").append("<input id=word-input class=input name=wordLearn value="+value+"></input>")
      $("#noteContent").append("<input id=comment-input class=input-comment name=wordCommentLearn placeholder=leave your comment></input>")

    // learnData = value
    // console.log('this is learn: ' + learnData)

  }
}
const pointWant = {
  name: 'pointWant',
  description: 'Highlight and save to want',
  action: function(value, range) {

    const $highlight = document.createElement('span')
    $highlight.style.backgroundColor = 'rgba(255, 156, 173,.3)'
    // or just add a class
    // $highlight.classList.add('your-class')
    range.surroundContents($highlight)
    learnWant = value
    console.log('this is want: ' + learnWant)

  }
}
var myScript = new WebClip(document.querySelector('#scriptWrapper'))
myScript.use([pointKey, pointLearn, pointWant])



</script>


</body>
</html>
